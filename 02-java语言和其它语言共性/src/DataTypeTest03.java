//赋值的时候,要左右两边数据类型一样
//不然会报错
public class DataTypeTest03 {

    //这里因为10 默认为int类型 而 i 定义的时候被定义成为了int 类型 所以 ,等式两边数据类型一样
    //数据默认是int类型
    int i = 10;


    public static void main(String[] args) {

        //    但是小容量可以穿换成大容量,称为自动类型转换机制
        long y = 2147483647;
        System.out.println(y);

//        long x = 2147483648;//会报错,编译不通过
//        System.out.println(x);
        //解决这个错误
//        把 2147483648 当作long类型来处理
        long x = 2147483648L;//添加 L 就可以了
        System.out.println(x);



//        大容量转换成小容量,需要进行强制类型转换,
    //    前面需要加 强制类型转换符
//        虽然编译会通过,但是 运行阶段 可能会损失精度
//        所以谨慎使用
        int a = (int) x;
        //强转原理:
        //原始数据: 00000000 00000000 00000000 00000000 10000000 00000000 00000000 00000000;
            //转换的时候,会把前四位都强行砍掉
        //变成了10000000 00000000 00000000 00000000
        //但是计算机存储数据的时候是以补码的方式存储的 所以这是一个负的值

        /**
         * 关于补码:
         *      正数:正数的补码就是他二进制的表示
         *      负数:负数的补码 是0-->1 1-->0 后 加一
         *      如10000000 就是  (-)01111111+1  = (-)10000000
         *
         * 计算机二进制有三种表现形式:
         *      原码,反码,补码,三个相互之间有转换方式,但是互不干涉
         *      计算机在任何情况就下底层表示和存储数据的时候采用了补码的形式
         */
        /*
        当一个整数字面值没有超出byte,short,char 的取值范围,这个字面值可以直接复制狗byte,short char
        类型的变量,这种机制sun允许了,目的就是为了方便程序员编程
         */
        System.out.println(a);
    }

}
