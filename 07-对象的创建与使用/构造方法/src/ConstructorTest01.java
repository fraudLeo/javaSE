/*
    关于java类中的构造方法:
        1.构造方法又被称为构造函数/构造器/constructor
        2.构造方法的语法结构:
            [修饰符列表] 构造方法名(形式参数列表) {
                构造方法体;
            }
        3.回顾普通方法的语法结构:
            [修饰符列表] 返回值类型 方法名 (形式参数列表) {
                方法体;
            }
        4.对于构造方法来说,"返回值类型"不需要指定,并且也不能写void
          只要写上了返回值类型,它就变成了普通方法了
        5.对于构造方法类说,构造方法的方法名必须和类名保持一致.
        6.构造方法的作用:
            构造方法存在的意义是: 通过构造方法的调用,可以创建对象.
        7.构造方法应该怎么使用?
            - 普通方法是这样调用的: 方法修饰符中有static的时候: 类名.方法名(实参列表),方法修饰符列表中没有static的时候:引用.方法名(实参列表)
            - 构造方法是: new 构造方法名(实参列表)
        8.构造方法调用执行后,有返回值吗?
            每一个构造方法执行完实际上都有返回值但是这个"return 值;"这句话不用写, 构造程序结束的时候Java自动返回了
            并且返回值类型是构造方法所在的类型,由于返回的就是本身,所以返回值不用写
        9.当一个类中没定义任何构造方法的时候,系统默认提供一个无参数的构造方法,这个构造方法成为缺省构造器.
        10.当一个类显示地将构造方法定义出来了,那么系统则不再默认为这个类提供缺省构造器.建议手动添加当前类的无参构造函数.因为无参构造放法太常用
        11.构造方法支持重载机制.在一个类当中编写了多个构造方法,这多个构造方法显然已经构成方法重载机制.
 */

public class ConstructorTest01 {

    public static void main(String[] args) {
        //当他被创建对象的时候就会使用构造方法
        //new 后面的是方法名 ,构造方法
        //也可以创建有参构造方法;以下程序创建了4个对象,只要构造函数调用,就会创建对象,并且一定是在 "堆内存" 中开辟内存空间
        User user1 = new User();
        User user2 = new User(10);
        User user3 = new User("zhangsan");
        User user4 = new User(10,"zhangsa");



    }

}
